name: Release Rust CLI

on:
  push:
    tags:
      - '*' # Push events to every tag not containing /

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - x86_64-pc-windows-gnu
          - x86_64-apple-darwin
          - aarch64-apple-darwin
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable # Use the stable Rust toolchain
          override: true

      - name: Install additional target
        run: rustup target add ${{ matrix.target }}

      - name: Install dependencies for Windows (if needed)
        if: matrix.target == 'x86_64-pc-windows-gnu'
        run: sudo apt-get update && sudo apt-get install -y mingw-w64

      - name: Install dependencies for macOS ARM cross-compilation
        if: matrix.target == 'aarch64-apple-darwin'
        run: sudo apt-get install -y gcc-aarch64-linux-gnu

      - name: Build the Rust project
        run: cargo build --release --target ${{ matrix.target }}

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.target }}
          path: target/${{ matrix.target }}/release/player-editor # Replace with your binary name

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download built artifacts
        uses: actions/download-artifact@v3
        with:
          path: ./artifacts

      - name: Create GitHub release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./artifacts/x86_64-unknown-linux-gnu/player-editor
            ./artifacts/x86_64-pc-windows-gnu/player-editor.exe
            ./artifacts/x86_64-apple-darwin/player-editor
            ./artifacts/aarch64-apple-darwin/player-editor
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
