name: Release

on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"

permissions:
  contents: write

jobs:
  build-and-upload:
    name: Build and upload
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        # You can add more, for any target you'd like!
        include:
          - build: linux-x86_64
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu

          - build: macos-x86_64
            os: macos-latest
            target: x86_64-apple-darwin

          - build: macos-arm64
            os: macos-latest
            target: aarch64-apple-darwin

          - build: windows-x86_64
            os: ubuntu-latest
            target: x86_64-pc-windows-gnu

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get the release version from the tag
        shell: bash
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Install Rust
        # Or @nightly if you want
        uses: dtolnay/rust-toolchain@stable
        # Arguments to pass in
        with:
          # Make Rust compile to our target (defined in the matrix)
          toolchain: stable
          targets: ${{ matrix.target }}

      - name: Install Dependencies for Windows (if needed)
        if: ${{ matrix.target == 'x86_64-pc-windows-gnu' }}
        run: sudo apt-get update && sudo apt-get install -y mingw-w64

      - name: Build
        run: cargo build --release --verbose --target ${{ matrix.target }}

      - name: Build archive
        shell: bash
        run: |
          # Replace with the name of your binary
          binary_name="player-editor"

          dirname="$binary_name-${{ env.VERSION }}-${{ matrix.target }}"
          mkdir "$dirname"

          # Handle Windows binary packaging
          if [ "${{ matrix.target }}" = "x86_64-pc-windows-gnu" ]; then
            mv "target/${{ matrix.target }}/release/$binary_name.exe" "$dirname"
            zip -r "$dirname.zip" "$dirname"
            echo "ASSET=$dirname.zip" >> $GITHUB_ENV
          else
            mv "target/${{ matrix.target }}/release/$binary_name" "$dirname"
            tar -czf "$dirname.tar.gz" "$dirname"
            echo "ASSET=$dirname.tar.gz" >> $GITHUB_ENV
          fi

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ${{ env.ASSET }}
